{
	"info": {
		"_postman_id": "90cd7f95-afcd-403b-9b50-8f1c1f0935d5",
		"name": "Attendance",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "46308101",
		"_collection_link": "https://michellewong-8956492.postman.co/workspace/Michelle-Wong's-Workspace~eb3df9cc-fb49-40c3-8181-9b5c55b64548/collection/46308101-90cd7f95-afcd-403b-9b50-8f1c1f0935d5?action=share&source=collection_link&creator=46308101"
	},
	"item": [
		{
			"name": "Create Attendance",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// ========== CONFIGURATION ==========",
							"const baseUrl = \"http://localhost:8080\";",
							"console.log(\"üöÄ Starting flow: create club ‚Üí create event\");",
							"",
							"// --- Random Date Generator ---",
							"function randomDate(start, end) {",
							"  const d = new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
							"  const pad = (n) => String(n).padStart(2, \"0\");",
							"  return `${d.getFullYear()}-${pad(d.getMonth() + 1)}-${pad(d.getDate())}T${pad(d.getHours())}:${pad(d.getMinutes())}:${pad(d.getSeconds())}`;",
							"}",
							"",
							"const rangeStart = new Date(2025, 0, 1);",
							"const rangeEnd   = new Date(2025, 11, 31);",
							"",
							"// ========== STEP 1: CREATE CLUB ==========",
							"pm.sendRequest({",
							"  url: `${baseUrl}/api/clubs`,",
							"  method: \"POST\",",
							"  header: [",
							"    { key: \"Content-Type\", value: \"application/json\" },",
							"    { key: \"Accept\", value: \"application/json\" }",
							"  ],",
							"  body: {",
							"    mode: \"raw\",",
							"    raw: JSON.stringify({",
							"      name: \"Club \" + pm.variables.replaceIn(\"{{$randomAlphaNumeric}}\"),",
							"      description: \"Auto-generated club for event testing\"",
							"    })",
							"  }",
							"}, function (err, res) {",
							"  if (err) {",
							"    console.error(\"‚ùå Error creating club:\", err);",
							"    return;",
							"  }",
							"",
							"  const club = res.json();",
							"  const clubId = club.clubId || club.id;",
							"  pm.environment.set(\"clubId\", clubId);",
							"  console.log(\"‚úÖ Club created:\", clubId);",
							"",
							"  // ========== STEP 2: CREATE EVENT ==========",
							"  const start = randomDate(rangeStart, rangeEnd);",
							"  const end = randomDate(new Date(start), rangeEnd);",
							"",
							"  const eventPayload = {",
							"    title: \"Event \" + pm.variables.replaceIn(\"{{$randomAlphaNumeric}}\"),",
							"    startTime: start,",
							"    endTime: end,",
							"    location: \"Monash Campus\",",
							"    description: \"Auto-generated event for testing\",",
							"    notification: { notifyBeforeMinutes: 30 },",
							"    clubs: [clubId]",
							"  };",
							"",
							"  pm.sendRequest({",
							"    url: `${baseUrl}/api/events`,",
							"    method: \"POST\",",
							"    header: [",
							"      { key: \"Content-Type\", value: \"application/json\" },",
							"      { key: \"Accept\", value: \"application/json\" }",
							"    ],",
							"    body: { mode: \"raw\", raw: JSON.stringify(eventPayload) }",
							"  }, function (err2, res2) {",
							"    if (err2) {",
							"      console.error(\"‚ùå Error creating event:\", err2);",
							"      return;",
							"    }",
							"",
							"    const event = res2.json();",
							"    const eventId = event.eventId || event.id;",
							"    pm.environment.set(\"eventId\", eventId);",
							"    console.log(\"üéâ Event created:\", eventId);",
							"  });",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"firstName\": \"{{$randomAlphaNumeric}}\",\n  \"lastName\": \"{{$randomAlphaNumeric}}\",\n  \"memberType\": \"MANAGER\",\n  \"email\": \"example@gmail.com\",\n  \"notes\": \"wijdiodwejdieoewdij\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/attendance/{{eventId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"attendance",
						"{{eventId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Attendance Details",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// ========== CONFIGURATION ==========",
							"const baseUrl = \"http://localhost:8080\";",
							"console.log(\"üöÄ Starting flow: create club ‚Üí create event ‚Üí 10 attendances\");",
							"",
							"// --- Random Date Generator ---",
							"function randomDate(start, end) {",
							"  const d = new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
							"  const pad = (n) => String(n).padStart(2, \"0\");",
							"  return `${d.getFullYear()}-${pad(d.getMonth() + 1)}-${pad(d.getDate())}T${pad(d.getHours())}:${pad(d.getMinutes())}:${pad(d.getSeconds())}`;",
							"}",
							"",
							"const rangeStart = new Date(2025, 0, 1);",
							"const rangeEnd   = new Date(2025, 11, 31);",
							"",
							"// ========== STEP 1: CREATE CLUB ==========",
							"pm.sendRequest({",
							"  url: `${baseUrl}/api/clubs`,",
							"  method: \"POST\",",
							"  header: [",
							"    { key: \"Content-Type\", value: \"application/json\" },",
							"    { key: \"Accept\", value: \"application/json\" }",
							"  ],",
							"  body: {",
							"    mode: \"raw\",",
							"    raw: JSON.stringify({",
							"      name: \"Club \" + pm.variables.replaceIn(\"{{$randomAlphaNumeric}}\"),",
							"      description: \"Auto-generated club for event testing\"",
							"    })",
							"  }",
							"}, function (err, res) {",
							"  if (err) {",
							"    console.error(\"‚ùå Error creating club:\", err);",
							"    return;",
							"  }",
							"",
							"  const club = res.json();",
							"  const clubId = club.clubId || club.id;",
							"  pm.environment.set(\"clubId\", clubId);",
							"  console.log(\"‚úÖ Club created:\", clubId);",
							"",
							"  // ========== STEP 2: CREATE EVENT ==========",
							"  const start = randomDate(rangeStart, rangeEnd);",
							"  const end = randomDate(new Date(start), rangeEnd);",
							"",
							"  const eventPayload = {",
							"    title: \"Event \" + pm.variables.replaceIn(\"{{$randomAlphaNumeric}}\"),",
							"    startTime: start,",
							"    endTime: end,",
							"    location: \"Monash Campus\",",
							"    description: \"Auto-generated event for attendance testing\",",
							"    notification: { notifyBeforeMinutes: 30 },",
							"    clubs: [clubId]",
							"  };",
							"",
							"  pm.sendRequest({",
							"    url: `${baseUrl}/api/events`,",
							"    method: \"POST\",",
							"    header: [",
							"      { key: \"Content-Type\", value: \"application/json\" },",
							"      { key: \"Accept\", value: \"application/json\" }",
							"    ],",
							"    body: { mode: \"raw\", raw: JSON.stringify(eventPayload) }",
							"  }, function (err2, res2) {",
							"    if (err2) {",
							"      console.error(\"‚ùå Error creating event:\", err2);",
							"      return;",
							"    }",
							"",
							"    const event = res2.json();",
							"    const eventId = event.eventId || event.id;",
							"    pm.environment.set(\"eventId\", eventId);",
							"    console.log(\"üéâ Event created:\", eventId);",
							"",
							"    // ========== STEP 3: CREATE 10 ATTENDANCES ==========",
							"    console.log(\"üßæ Creating 10 attendances...\");",
							"",
							"    function createAttendance(i, callback) {",
							"      const firstName = pm.variables.replaceIn(\"{{$randomAlphaNumeric}}\");",
							"      const lastName = pm.variables.replaceIn(\"{{$randomAlphaNumeric}}\");",
							"      const email = `attendee${i}@monash.edu`;",
							"      const notes = \"Auto-generated attendance note\";",
							"",
							"      const attendanceBody = {",
							"        firstName: firstName,",
							"        lastName: lastName,",
							"        memberType: \"MANAGER\",",
							"        email: email,",
							"        notes: notes",
							"      };",
							"",
							"      pm.sendRequest({",
							"        url: `${baseUrl}/api/attendance/${eventId}`,",
							"        method: \"POST\",",
							"        header: [",
							"          { key: \"Content-Type\", value: \"application/json\" },",
							"          { key: \"Accept\", value: \"application/json\" }",
							"        ],",
							"        body: { mode: \"raw\", raw: JSON.stringify(attendanceBody) }",
							"      }, function (err3, res3) {",
							"        if (err3) {",
							"          console.error(`‚ùå Failed attendance #${i + 1}:`, err3);",
							"        } else {",
							"          console.log(`‚úÖ Attendance #${i + 1} created for ${firstName} ${lastName} (${email})`);",
							"        }",
							"        if (callback) callback();",
							"      });",
							"    }",
							"",
							"    // Sequential loop to avoid overwhelming server",
							"    let i = 0;",
							"    function loop() {",
							"      if (i < 10) {",
							"        createAttendance(i, function() {",
							"          i++;",
							"          setTimeout(loop, 300); // 300 ms delay between requests",
							"        });",
							"      } else {",
							"        console.log(\"üéØ All 10 attendances created successfully!\");",
							"      }",
							"    }",
							"    loop();",
							"  });",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/attendance/{{eventId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"attendance",
						"{{eventId}}"
					]
				}
			},
			"response": []
		}
	]
}